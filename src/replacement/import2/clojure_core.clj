(ns replacement.import2.clojure-core)


(def syms
  #{'sym
    'quote
    'throw
    'if
    'recur
    'fn*
    'contains
    'def
    'Type
    'SeqIterator
    'primitives-classnames
    '+'
    'Enum
    'decimal?
    'prependss
    'RT
    'restart-agent
    'sort-by
    'is-runtime-annotation?
    'macroexpand
    'ensure
    'imap-cons
    'chunk-first
    'add-annotation
    'load-data-reader-file
    'eduction
    'tree-seq
    'unchecked-remainder-int
    'seq
    'reduce
    'InternalError
    'when-first
    'find-ns
    'get-thread-bindings
    'NullPointerException
    'into1
    'contains?
    'every?
    'proxy-mappings
    'keep-indexed
    'cond->>
    'subs
    'NotSerializableException
    'ref-min-history
    'set
    'BlockingQueue
    'take-last
    'InheritableThreadLocal
    'bit-set
    'reader-conditional
    'gen-class
    'qualified-keyword?
    'while
    '->Eduction
    'throw-if
    'butlast
    'satisfies?
    'Class
    'line-seq
    'unchecked-subtract-int
    '*print-namespace-maps*
    'take-nth
    'first
    're-groups
    'Error
    'NoSuchFieldException
    'seq?
    'dec'
    'ns-unmap
    'println-str
    'with-bindings*
    'inst-ms
    'iterator-seq
    'sigs
    'Runtime
    'check-cyclic-dependency
    'iterate
    'Cloneable
    'slurp
    'StringIndexOutOfBoundsException
    'newline
    'Object
    'short-array
    'deref-future
    'fn?
    'doall
    'prefers
    'enumeration-seq
    'dedupe
    'pr-on
    'dissoc
    'atom
    'import
    'bit-shift-right
    'print-method
    'peek
    'VerifyError
    'aget
    'pvalues
    'bound-fn
    'mk-bound-fn
    'vswap!
    'last
    'pr
    'LinkageError
    'namespace
    'IProxy
    'push-thread-bindings
    'bases
    '=
    'read+string
    'dosync
    'Process
    'remove-ns
    'take
    'vector?
    'seq-to-map-for-destructuring
    'ClassLoader
    'thread-bound?
    'send-via
    'boolean
    'bit-shift-left
    'random-uuid
    'any?
    'find-var
    'Modifier
    'rand-int
    'aclone
    'Double
    'PrintWriter-on
    'vreset!
    'chunk
    'dec
    'future-call
    'resultset-seq
    'struct
    'ThreadGroup
    'Sequential
    'data-reader-var
    'map
    'juxt
    'print-initialized
    'setup-reference
    'ns-publics
    '<
    'IExceptionInfo
    'ThreadDeath
    '*source-path*
    'with-loading-context
    'test
    'rest
    'ex-data
    'emit-deftype*
    'NaN?
    'compile
    'Callable
    'isa?
    'boolean?
    '..
    'munge
    'delay
    'protected-final-methods
    'set-error-mode!
    're-seq
    'char?
    'UnknownError
    'make-hierarchy
    'set-agent-send-executor!
    'swap-vals!
    'keep
    'char
    'mapcat
    'unchecked-long
    'emit-extend-type
    'aset-long
    'some?
    'unchecked-negate
    'get-super-and-interfaces
    'remove-tap
    'parse-opts
    'gen-interface
    '*command-line-args*
    'reverse
    'inst?
    'ClassCircularityError
    'String
    'prim->class
    'range
    'sort
    'generate-class
    '-cache-protocol-fn
    'unchecked-inc-int
    'map-indexed
    'with-bindings
    'rand-nth
    'comp
    'await
    'spit
    'future-done?
    '*read-eval*
    'dorun
    'implements?
    'simple-symbol?
    'assert-valid-fdecl
    'disj
    '*2
    'eval
    'Eduction
    'cons
    'refer
    'print-dup
    'Serializable
    '-reset-methods
    'floats
    'Void
    'pos?
    'fnil
    'merge-with
    'nthrest
    'Opcodes
    'load
    'if-not
    '*verbose-defrecords*
    'sequential?
    'EnumConstantNotPresentException
    '*print-level*
    'shuffle
    'boolean-array
    'find
    'ams
    'ArrayManager
    'build-positional-factory
    'alength
    'bit-xor
    'deliver
    'doseq
    'AbstractMethodError
    'unsigned-bit-shift-right
    'neg?
    'expand-method-impl-cache
    'load-one
    'load-data-readers
    'var-set
    'global-hierarchy
    'unchecked-float
    'pmap
    'error-mode
    'num
    'reduced?
    'tapq
    'disj!
    'StrictMath
    'float?
    'aset-float
    'deftype
    'bean
    'booleans
    'normalize-slurp-opts
    'ns-unalias
    'when-let
    'int-array
    'set?
    'inc'
    'process-annotation
    'cat
    'StackTraceElement->vec
    '*suppress-read*
    'flush
    'take-while
    'vary-meta
    '<=
    'alter
    '-'
    'if-some
    'conj!
    'repeatedly
    'zipmap
    'reset-vals!
    'alter-var-root
    'Array
    'biginteger
    'descriptor
    'remove
    '*
    're-pattern
    'min
    'pop!
    'chunk-append
    'nary-inline
    'prn-str
    'ArrayStoreException
    'with-precision
    'super-chain
    'format
    'IllegalArgumentException
    'reversible?
    'shutdown-agents
    'conj
    'bound?
    'transduce
    'lazy-seq
    '*print-length*
    '*file*
    'compare-and-set!
    'StackOverflowError
    '*use-context-classloader*
    'await1
    'let
    'parse-opts+specs
    'ref-set
    'pop-thread-bindings
    'interleave
    'print-map
    'printf
    'map?
    '->
    'defstruct
    'protocol?
    '*err*
    'assert-same-protocol
    'get
    'doto
    'identity
    'into
    'areduce
    'long
    'double
    'volatile?
    'update-vals
    'definline
    'Override
    'nfirst
    'meta
    'find-protocol-impl
    'emit-extend-protocol
    'bit-and-not
    '*default-data-reader-fn*
    'var?
    'method-sig
    'unchecked-add-int
    'unquote-splicing
    'emit-method-builder
    'hash-ordered-coll
    'deref-as-map
    'future
    'IllegalAccessError
    'reset-meta!
    'Iterable
    'Runnable
    'Vec
    'cycle
    'fn
    'seque
    'serialized-require
    'empty?
    'short
    'CloneNotSupportedException
    'definterface
    'pref
    'add-tap
    'filterv
    'hash
    'quot
    'ns-aliases
    'read
    'unchecked-double
    'NoClassDefFoundError
    'key
    'longs
    'not=
    'string?
    'uri?
    'emit-defrecord
    'aset-double
    'overload-name
    'unchecked-multiply-int
    'System
    'tapset
    'shift-mask
    'chunk-rest
    'pcalls
    '*allow-unresolved-vars*
    'remove-all-methods
    'ns-resolve
    'DynamicClassLoader
    'most-specific
    'as->
    'aset-boolean
    'trampoline
    'double?
    'NumberFormatException
    'Constructor
    'fits-table?
    'when-not
    '*1
    'vec
    '*print-meta*
    'when
    'int
    'print-meta
    'map-entry?
    'ns-refers
    'rand
    'second
    'vector-of
    'hash-combine
    '>
    'Throwable
    'replace
    'int?
    'associative?
    'unchecked-int
    'set-error-handler!
    'inst-ms*
    'keyword?
    'force
    'bound-fn*
    'Writer
    'namespace-munge
    'group-by
    'IllegalThreadStateException
    'prn
    'extend
    '>0?
    'PersistentHashMap
    'GeneratorAdapter
    'unchecked-multiply
    'print-tagged-object
    'some->>
    'default-data-readers
    '->VecSeq
    'even?
    'unchecked-dec
    'Inst
    'tagged-literal?
    'double-array
    'in-ns
    'create-ns
    're-matcher
    'defn
    'ref
    'NoSuchMethodException
    'bigint
    'extends?
    'spread
    'promise
    'aset-char
    'rseq
    'Deprecated
    'ex-cause
    'load-all
    'construct-proxy
    'VirtualMachineError
    'agent-errors
    '*compile-files*
    'ex-message
    '*math-context*
    'float
    'pr-str
    'concat
    'aset-short
    'set-agent-send-off-executor!
    'ArrayIndexOutOfBoundsException
    'ns
    'mk-am
    'valid-java-method-name
    'symbol
    'to-array-2d
    'ExceptionInfo
    'mod
    '*loading-verbosely*
    'amap
    'Util
    'pop
    'use
    'VecNode
    'print-object
    'unquote
    'declare
    'dissoc!
    'reductions
    'aset-byte
    'indexed?
    'ref-history-count
    '-
    'assoc!
    'hash-set
    'ClassNotFoundException
    'reduce-kv
    'or
    'cast
    'InstantiationError
    'ClassFormatError
    'reset!
    'name
    'InterruptedException
    'ffirst
    'emit-protocol
    'sorted-set
    'emit-hinted-impl
    'strip-ns
    'UnsupportedOperationException
    'counted?
    'RuntimePermission
    'byte-array
    'IVecImpl
    'parse-double
    'tagged-literal
    'println
    'assert-args
    'extend-type
    'macroexpand-1
    'NoSuchMethodError
    'assoc-in
    'char-name-string
    'bit-test
    'defmethod
    'requiring-resolve
    'EMPTY-NODE
    'Thread
    'time
    'memoize
    'alter-meta!
    'future?
    'add-annotations
    'zero?
    'simple-keyword?
    'require
    'unchecked-dec-int
    'persistent!
    'nnext
    'StringBuffer
    'add-watch
    'not-every?
    'class?
    'rem
    'agent-error
    'some
    'future-cancelled?
    'memfn
    'neg-int?
    'struct-map
    'drop
    'parse-impls
    '*data-readers*
    'load-libs
    'nth
    'sorted?
    'nil?
    'extend-protocol
    'split-at
    '*e
    'validate-generate-class-options
    'load-reader
    'Package
    'random-sample
    'cond->
    'IncompatibleClassChangeError
    'dotimes
    'UnsatisfiedLinkError
    'select-keys
    'bit-and
    'bounded-count
    'update
    'group-by-sig
    'list*
    'NegativeArraySizeException
    'reify
    'update-in
    'prefer-method
    'aset-int
    '*clojure-version*
    'ensure-reduced
    '*'
    'Readable
    'Boolean
    'instance?
    'with-open
    'mix-collection-hash
    're-find
    'run!
    'BigInteger
    'val
    'defonce
    'unchecked-add
    'print-sequential
    'loaded-libs
    '->Vec
    'bytes?
    'filter-methods
    'not
    'ClassCastException
    'with-meta
    'unreduced
    'the-ns
    'record?
    'type
    'identical?
    'IndexOutOfBoundsException
    'unchecked-divide-int
    'ns-name
    'is-annotation?
    'max-key
    '*unchecked-math*
    'defn-
    '*out*
    'file-seq
    'agent
    'Math
    'Thread$UncaughtExceptionHandler
    'Comparable
    'ns-map
    'set-validator!
    'ident?
    'Thread$State
    'maybe-destructured
    'maybe-min-hash
    'max-switch-table-size
    'defprotocol
    'the-class
    'swap!
    'vals
    'Murmur3
    'unchecked-subtract
    'tap>
    '*warn-on-reflection*
    'sorted-set-by
    'sync
    'qualified-ident?
    'assert
    '*compile-path*
    'SecurityException
    'true?
    'array
    'Integer
    'release-pending-sends
    'print
    'empty
    'remove-method
    '*in*
    'load-lib
    'print-ctor
    'letfn
    'volatile!
    '/
    'read-line
    'binding-conveyor-fn
    'reader-conditional?
    'bit-or
    'ClassWriter
    'clear-agent-errors
    'vector
    'proxy-super
    '>=
    'drop-last
    'lift-ns
    'not-empty
    'root-directory
    'distinct
    'partition
    'data-reader-urls
    'Short
    'loop
    'ams-check
    'add-classpath
    'IHashEq
    'bit-flip
    'long-array
    'filter-key
    'descendants
    'StackTraceElement
    'iteration
    'find-field
    'merge
    'ExceptionInInitializerError
    'accessor
    'Reflector
    'integer?
    'mapv
    'infinite?
    'partition-all
    'partition-by
    'numerator
    'object-array
    'with-out-str
    'condp
    'derive
    'Number
    'load-string
    'special-symbol?
    'elide-top-frames
    'prep-hashes
    'ancestors
    'subseq
    'error-handler
    'gensym
    'cond
    'TypeNotPresentException
    'parsing-err
    'check-valid-options
    'ratio?
    'delay?
    'intern
    'print-simple
    'flatten
    'doubles
    'halt-when
    'with-in-str
    'remove-watch
    'ex-info
    'ifn?
    'some->
    'nat-int?
    'asm-type
    'proxy-name
    'ns-interns
    'all-ns
    'find-protocol-method
    'subvec
    'for
    'binding
    'partial
    'chunked-seq?
    'find-keyword
    'replicate
    'min-key
    'reduced
    'char-escape-string
    're-matches
    'array-map
    'unchecked-byte
    'reduce1
    'with-local-vars
    'ns-imports
    'send-off
    'NoSuchFieldError
    'defmacro
    'every-pred
    'keys
    'Character
    'rationalize
    'load-file
    'distinct?
    'max-mask-bits
    'libspec?
    'pos-int?
    'prep-ints
    'extenders
    'unchecked-short
    'methods
    'odd?
    '->ArrayChunk
    'float-array
    'print-throwable
    '*3
    'validate-fields
    'alias
    'UnsupportedClassVersionError
    'frequencies
    'read-string
    'proxy
    'rsubseq
    'inc
    'get-method
    'with-redefs
    'uuid?
    'bit-clear
    'filter
    'locking
    'list
    '+
    'def-aset
    'split-with
    'aset
    '->VecNode
    'abs
    'keyword
    '*ns*
    'tap-loop
    'destructure
    '*assert*
    'defmulti
    'ctor-sigs
    'Exception
    'chars
    'str
    'next
    'hash-map
    'if-let
    'underive
    'ref-max-history
    'Throwable->map
    'InstantiationException
    'false?
    '*print-readably*
    'ints
    'class
    'some-fn
    'case
    '*flush-on-newline*
    'to-array
    'bigdec
    'list?
    'simple-ident?
    'non-private-methods
    'bit-not
    'parse-uuid
    'io!
    'generate-interface
    'xml-seq
    'VecSeq
    'case-map
    'byte
    'max
    'ProcessBuilder
    'update-keys
    '==
    '*agent*
    'lazy-cat
    'comment
    'parents
    'count
    'root-resource
    '*loaded-libs*
    'supers
    'generate-proxy
    '*fn-loader*
    'ArrayChunk
    'sorted-map-by
    'BigDecimal
    'apply
    'IllegalAccessException
    'ClassVisitor
    'Float
    'add-doc-and-meta
    'interpose
    'deref
    'emit-impl
    '*pending-paths*
    'parse-boolean
    'assoc
    'system-newline
    'rational?
    'transient
    'clojure-version
    'merge-hash-collisions
    'CharSequence
    'chunk-cons
    'comparator
    'SecurityManager
    'LinkedBlockingQueue
    'StringBuilder
    'print-prefix-map
    'sorted-map
    'send
    'drop-while
    'OutOfMemoryError
    'proxy-call-with-super
    'IllegalMonitorStateException
    'realized?
    'char-array
    'resolve
    'compare
    'ThreadLocal
    'complement
    'ArithmeticException
    '*compiler-options*
    'Long
    '*print-dup*
    'defrecord
    'with-redefs-fn
    'sequence
    'constantly
    'get-proxy-class
    'when-class
    'make-array
    'shorts
    'completing
    'update-proxy
    'IPersistentMap
    'unchecked-negate-int
    'hash-unordered-coll
    'repeat
    'unchecked-inc
    'IllegalStateException
    '*reader-resolver*
    'nthnext
    'and
    'create-struct
    'preserving-reduced
    'get-validator
    'number?
    'Compiler
    'RuntimeException
    'await-for
    'chunk-next
    'print-str
    'not-any?
    'into-array
    'SuppressWarnings
    'qualified-symbol?
    'parse-long
    'init-proxy
    'chunk-buffer
    'seqable?
    'symbol?
    'Appendable
    'when-some
    'unchecked-char
    'AssertionError
    '>1?
    'Byte
    '->>
    'future-cancel
    'var-get
    'commute
    'Method
    'coll?
    'get-in
    'fnext
    'denominator
    'List
    'bytes
    'refer-clojure
    'escape-class-name
    })
